{"ast":null,"code":"import _asyncToGenerator from \"/Users/gionnimontana/Documents/privRepo/demo-angular-table/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nlet matchesCache = null;\nexport const getMatchesMap = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* () {\n    if (matchesCache) {\n      return [matchesCache, false];\n    }\n\n    let response = {};\n    let error = false;\n\n    try {\n      const result = yield fetch('https://www.dontouch.ch/json/cc.json');\n      const data = yield result.json();\n      response = data.doc[0].data.matches;\n      matchesCache = response;\n    } catch (e) {\n      error = true;\n    }\n\n    return [response, error];\n  });\n\n  return function getMatchesMap() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport const deleteMatches = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator(function* (matchIds) {\n    // fake promise to simulate async call\n    yield new Promise(resolve => {\n      setTimeout(() => {\n        resolve(true);\n      }, 1000);\n    }); // remove matches from cache\n\n    if (!matchesCache) return false;\n    matchesCache = Object.keys(matchesCache).reduce((acc, matchKey) => {\n      if (matchesCache && !matchIds.includes(matchKey)) acc[matchKey] = matchesCache[matchKey];\n      return acc;\n    }, {});\n    return true;\n  });\n\n  return function deleteMatches(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport const addMatch = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator(function* () {\n    // fake promise to simulate async call\n    yield new Promise(resolve => {\n      setTimeout(() => {\n        resolve(true);\n      }, 1000);\n    }); // add match to cache\n\n    if (!matchesCache) return false;\n    const allIDS = Object.keys(matchesCache).map(el => Number(el));\n    allIDS.sort();\n    const newMatchID = allIDS.length > 0 ? allIDS[allIDS.length - 1] + 1 : 23639961;\n    const date = new Date();\n    const match = {\n      teams: {\n        away: {\n          name: 'teamY'\n        },\n        home: {\n          name: 'teamX'\n        }\n      },\n      time: {\n        date: date.toLocaleDateString('it-IT'),\n        time: `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`\n      },\n      result: {\n        away: Math.floor(Math.random() * 5),\n        home: Math.floor(Math.random() * 5)\n      }\n    };\n    matchesCache[newMatchID] = match;\n    return true;\n  });\n\n  return function addMatch() {\n    return _ref3.apply(this, arguments);\n  };\n}();","map":null,"metadata":{},"sourceType":"module"}