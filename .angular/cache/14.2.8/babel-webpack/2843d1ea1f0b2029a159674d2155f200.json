{"ast":null,"code":"import _asyncToGenerator from \"/Users/gionnimontana/Documents/privRepo/demo-angular-table/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nlet matchesCache = null;\nexport const getMatchesMap = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* () {\n    if (matchesCache) {\n      return [matchesCache, false];\n    }\n\n    let response = {};\n    let error = false;\n\n    try {\n      const result = yield fetch('https://www.dontouch.ch/json/cc.json');\n      const data = yield result.json();\n      response = data.doc[0].data.matches;\n      matchesCache = response;\n    } catch (e) {\n      error = true;\n    }\n\n    return [response, error];\n  });\n\n  return function getMatchesMap() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport const deleteMatches = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator(function* (matchIds) {\n    // fake promise to simulate async call\n    yield new Promise(resolve => {\n      setTimeout(() => {\n        resolve(true);\n      }, 1000);\n    }); // remove matches from cache\n\n    if (!matchesCache) return false;\n    matchesCache = Object.keys(matchesCache).reduce((acc, matchKey) => {\n      if (matchesCache && !matchIds.includes(matchKey)) acc[matchKey] = matchesCache[matchKey];\n      return acc;\n    }, {});\n    return true;\n  });\n\n  return function deleteMatches(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport const addMatch = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator(function* () {\n    // fake promise to simulate async call\n    yield new Promise(resolve => {\n      setTimeout(() => {\n        resolve(true);\n      }, 1000);\n    }); // add match to cache\n\n    if (!matchesCache) return false;\n    const allIDS = Object.keys(matchesCache).map(el => Number(el));\n    allIDS.sort();\n    const newMatchID = allIDS.length > 0 ? allIDS[allIDS.length - 1] + 1 : 23639961;\n    const date = new Date();\n    const match = {\n      teams: {\n        away: {\n          name: 'teamY'\n        },\n        home: {\n          name: 'teamX'\n        }\n      },\n      time: {\n        date: date.toLocaleDateString('it-IT'),\n        time: `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`\n      },\n      result: {\n        away: Math.floor(Math.random() * 5),\n        home: Math.floor(Math.random() * 5)\n      }\n    };\n    matchesCache[newMatchID] = match;\n    return true;\n  });\n\n  return function addMatch() {\n    return _ref3.apply(this, arguments);\n  };\n}();","map":{"version":3,"mappings":"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","names":["matchesCache","getMatchesMap","response","error","result","fetch","data","json","doc","matches","e","deleteMatches","matchIds","Promise","resolve","setTimeout","Object","keys","reduce","acc","matchKey","includes","addMatch","allIDS","map","el","Number","sort","newMatchID","length","date","Date","match","teams","away","name","home","time","toLocaleDateString","getHours","getMinutes","getSeconds","Math","floor","random"],"sourceRoot":"","sources":["/Users/gionnimontana/Documents/privRepo/demo-angular-table/src/api/matches/index.ts"],"sourcesContent":["import { Match, MatchesMap } from \"src/utils/interfaces/matches\"\n\nlet matchesCache: MatchesMap | null = null\n\nexport const getMatchesMap = async (): Promise<[MatchesMap, boolean]> => {\n    if (matchesCache) {\n        return [matchesCache, false]\n    }\n    let response: MatchesMap = {}\n    let error: boolean = false\n    try {\n        const result = await fetch('https://www.dontouch.ch/json/cc.json')\n        const data = await result.json()\n        response = data.doc[0].data.matches as MatchesMap\n        matchesCache = response\n    } catch (e) {\n        error = true\n    }\n    return [response, error]\n}\n\nexport const deleteMatches = async (matchIds: string[]): Promise<boolean> => {\n    // fake promise to simulate async call\n    await new Promise((resolve) => {\n        setTimeout(() => {resolve(true) }, 1000)\n    })\n\n    // remove matches from cache\n    if (!matchesCache) return false\n    matchesCache = Object.keys(matchesCache).reduce((acc: MatchesMap, matchKey) => {\n        if (matchesCache && !matchIds.includes(matchKey)) acc[matchKey] = matchesCache[matchKey]\n        return acc\n    }, {})\n\n    return true\n}\n\nexport const addMatch = async (): Promise<boolean> => {\n    // fake promise to simulate async call\n    await new Promise((resolve) => {\n        setTimeout(() => {resolve(true) }, 1000)\n    })\n\n    // add match to cache\n    if (!matchesCache) return false\n    const allIDS = Object.keys(matchesCache).map(el => Number(el))\n    allIDS.sort()\n    const newMatchID = allIDS.length > 0 ? allIDS[allIDS.length - 1] + 1 : 23639961\n    const date = new Date()\n    const match: Match = {\n        teams: {\n            away: { name: 'teamY' },\n            home: { name: 'teamX' }\n        },\n        time: {\n            date: date.toLocaleDateString('it-IT'),\n            time: `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`\n        },\n        result: {\n            away: Math.floor(Math.random() * 5),\n            home: Math.floor(Math.random() * 5),\n        }\n    }\n    matchesCache[newMatchID] = match\n\n    return true\n}"]},"metadata":{},"sourceType":"module"}